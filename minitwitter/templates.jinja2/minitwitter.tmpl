{% extends 'skel.tmpl' %}

{% block content %}

<script>
var timeToCheckForNewUpdated = 5000;    //recheck time
var lastUpdate = "";

// https://stackoverflow.com/questions/40893537/fetch-set-cookies-and-csrf
function getCookie(name) {
  if (!document.cookie) {
    return null;
  }

  const xsrfCookies = document.cookie.split(';')
    .map(c => c.trim())
    .filter(c => c.startsWith(name + '='));

  if (xsrfCookies.length === 0) {
    return null;
  }

  return decodeURIComponent(xsrfCookies[0].split('=')[1]);
}

//Methode which is calles when page is fully loaded
function allLoaded(){
    setInterval(function() {
        getLastestTweetPostTime(); //start loop
    }, timeToCheckForNewUpdated);
}

//returns the tweet format, mayby put into .py?
function getTweetFormat(date,message,author){
   html = `<section class="post">
           <header class="post-header">
                <img alt="Some avatar" class="post-avatar" src="https://api.adorable.io/avatars/48/`+author+`.png" width="48" height="48">
                <h2 class="post-title">`+message+`</h2>
                <p class="post-meta">By `+author+` on `+date+`</p>
            </header>
            <div class="post-description"><p>&nbsp;</p></div>
        </section>`;
   return html;
}

//formats a dateString
function getDateFormat(dateString){
    var reggie = /(\d{2}).(\d{2}).(\d{4}) (\d{2}):(\d{2}):(\d{2})/;
    var dateArray = reggie.exec(dateString);
    var dateObject = new Date(
        (+dateArray[3]),
        (+dateArray[2])-1, // Careful, month starts at 0!
        (+dateArray[1]),
        (+dateArray[4]),
        (+dateArray[5]),
        (+dateArray[6])
    );
    return dateObject;
}

//Adds only latest Tweets
function addOnlyNewTweets(lastUpdate, tweets){
    var jsonTweets = JSON.parse(tweets); //tweets as json
    var arrayLength = jsonTweets.length;
    var newHTMLContent = "";
    for (var i = 0; i < arrayLength; i++) {
        tweet = jsonTweets[i];
        date = tweet["date"];
        message = tweet["tweet"];
        author = tweet["author"];
        if(getDateFormat(date)>getDateFormat(lastUpdate)){ //only if new tweets
           newHTMLContent = newHTMLContent+getTweetFormat(date,message,author); //add to our html
        }
    }
    var htmlTweets = document.getElementById("javascriptTweets"); //where to put new tweets, on top obv.
    htmlTweets.innerHTML = newHTMLContent+htmlTweets.innerHTML; //put them there
}

//gets all Tweets via AJAX and puts them on screen
function getAllTweetsViaAJAX(lastUpdate){
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) { //if successfull
      var tweets = this.responseText;
      addOnlyNewTweets(lastUpdate,tweets); //show them on browser
    }
    if (this.readyState == 4 && this.status == 400) {//if error, just ignore it
      return;
    }
  };
  xhttp.open("POST", "getAllTweetsAJAX", true);
  const csrfToken = getCookie('csrftoken');
  xhttp.setRequestHeader('csrftoken', csrfToken);
  xhttp.send();
}

//Method which will start getting all tweets and setting last update
function getNewTweetsAndShowThem(lastUpdate){
    var copyOfLastUpdate = lastUpdate; //besser eine kopie erstellen falls es ueberschrieben wird
    getAllTweetsViaAJAX(copyOfLastUpdate);
}

//Checks if newer tweets found by given time
function checkForNewUpdated(receivedLatestTime){

   if(lastUpdate == ""){ //first time page Loaded
     lastUpdate = receivedLatestTime;
     return;
   }
   if(lastUpdate != receivedLatestTime){ //if newer update time
     console.log("super was neues");
     getNewTweetsAndShowThem(lastUpdate);
     lastUpdate = receivedLatestTime; //update last seend time
   } else {
     console.log("nix neues");
   }

}

//Method to get Latest Time of Tweet
function getLastestTweetPostTime(){
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) { //if successfull
      checkForNewUpdated(this.responseText); //check if newer
    }
    if (this.readyState == 4 && this.status == 400) { //just ignore the error
      //checkForNewUpdated(this.responseText);
      //besser einfach nix tun
    }
  };
  xhttp.open("POST", "getLastTweetTime", true);
  const csrfToken = getCookie('csrftoken');
    XHR.setRequestHeader('csrftoken', csrfToken);
  xhttp.send();
}

window.onload = allLoaded(); //start my script to start the loop
</script>

    <h1 class="content-subhead">The Tweets</h1>

    <div id="javascriptTweets"></div>

    {% for tweet in tweets: %}
        <section class="post">
           <header class="post-header">
                <img alt="Some avatar" class="post-avatar" src="https://api.adorable.io/avatars/48/{{tweet.author}}.png" width="48" height="48">
                <h2 class="post-title">{{tweet.tweet|safe}}</h2>
                <p class="post-meta">By {{tweet.author|safe}} on {{tweet.date|safe}}</p>
            </header>
            <div class="post-description"><p>&nbsp;</p></div>
        </section>
    {% endfor %}

{% endblock %}